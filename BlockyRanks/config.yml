#v1.0.0
#author: BlockyBorzan
#compatible with MC 1.13+

#DISCLAIMER: 
#THIS IS NOT A PERMISSION PROVIDER, MERELY A PLUGIN TO HELP WITH RANKING UP PLAYERS ALONG PREDEFINED 
#RANK PATH. IT REQUIRES VAULT, AN ECONOMY AND A PERMISSION PROVIDER TO WORK!


# DON'T DELETE THIS KEY OR CHANGE THE VALUE. IT IS IMPORTANT FOR AUTOMATIC CONFIG UPDATES!
# CHANGES MIGHT LEAD TO DATA INCONSISTENCIES!
version: "v1.0.0"

chat-message-prefix: '&7[&6&lB&3&llocky&6&lR&3&lanks&7] &r'

# supported are 'yml', 'mysql' and 'sqlite'. mysql is recommended.
storage-type: 'sqlite'

# mysql connection data (only relevant if storage-type is 'mysql')
# (the database has to exist beforehand in order to use mysql storage
# however all tables are created automatically)
mysql:
  host: 'host'
  database: 'database'
  port: '3306'
  user: 'user'
  password: 'password'
  table_prefix: 'blockyranks_'


# DEFINE MESSAGES SENT TO PLAYERS HERE
# you can use {rank} to represent the name of the new rank. The name is derived from the rank tree and 
# converted into a CamelCase String with spaces (e.g. god_emperor becomes God Emperor).
# you can also use chat color codes in combination with the ampersand character ('&').
# Leave the options empty ('') in order to not send any messages.
# supported placeholders are {player}, {nickname} and {rank}. More will probably be added in the future.
messages:
  # Sent only to the player on rankup
  player-rankup: '&3Congratulations! You just ascended to the rank of &6{rank}&3!'

  # Broadcast to the whole server. If player-rankup is defined (not empty or missing), 
  # the player who just ranked up will not receive this message because they already 
  # receive the player-rankup message.
  rankup-broadcast: '&3Congratulations to &6{nickname}&3 for ranking up to &6{rank}&3!'

  # Message sent to players who reached a rank that can not rank up any higher 
  # (Last rank on any branch that has no successors)
  highest-rank-reached-err: '&5 As &6{rank}&5, you have already reached the highest rank and can not rank up any further. Congratulations!'

  # Message sent to players when they try to rankup, but their new rank could not be saved
  # using the specified storage-type. The rankup is not successful in this case (rankup-unsuccessful will also be sent)! 
  saving-rank-err: '&4Something went wrong and your new rank was not saved.'

  # Message sent to players when they try to rankup, but an error in the code of any
  # unexpected kind happens. The rankup is not successful in this case (rankup-unsuccessful will also be sent)!
  # NO PLACEHOLDERS ARE SUPPORTED ON THIS MESSAGE!
  exception-err: '&4An error has occured, please try again or contact staff about it if the problem persists.'

  # Message sent to players when they try to use any blockyranks commands in a world where no
  # ranks branch is configured (see below)
  ranks-unavailable-err: '&4Unfortunately ranks are not available in this world.'

  # Message sent to players when their rankup was unsuccessful.
  # NO PLACEHOLDERS ARE SUPPORTED ON THIS MESSAGE!
  rankup-unsuccessful: '&cUnable to rank up.'


#----------------------------------------------------------------------------------------------------------------
#     CREATE A RANK TREE  -   a few things to consider and pay attention to
#----------------------------------------------------------------------------------------------------------------
#   * A rank tree is a group of branches, each containing between 1 and 36 ranks,
#     connected by specifying which branches come after each branch.
#
#   * A branch is a sequence of ranks, where only the first and the last rank on the
#     branch can have more than 1 and up to 5 preceeding and succeeding ranks.
#
#   * Each branch has to be located in its own file '<branchname>.yml'
#     inside the 'branches/' folder in the BlockyRanks plugin folder.
#     (for example, if you specify "peasantry.yml" in the 'initial-branch' variable
#     (or in the 'following-branches' array in each branch's config file)
#     create, rename or place a the file 'peasantry.yml' inside the folder,
#     and configure its branch to represent and contain all aristocratic ranks)
#
#   * Each such file must contain one and only branch configuration. If there are more
#     than one, only one of them will be parsed and used, which might throw off your tree.
#
#   * If it contains no branch configs, no branch can be constructed and that might
#     result in a different tree than you might expect or want.
#
#   * If it contains no ranks, the branch will be ignored.
#
#   * Players may only hold one rank on any of the branches at any given time, otherwise
#     this plugin will choose the highest rank or choose one at random if two ranks are equal.
# ----------------------------------------------------------------------------------------------------------------


# This list contains the config files that describe the "per world" first branch of your tree
# (You can define one tree for each world)
initial-branches:
  # Here you can define the default branch that is used for all worlds.
  all-worlds:
    # This enables or disables the whole default branchfeature
    enabled: true
    # This defines the default branch used in every world by default (this includes the end and the nether worlds!)
    branch: 'peasantry.yml'
    # The worlds you don't want using the default initial branch are specified here
    exempt-worlds:
    - 'sample_world_name'
#    - 'another_world_name_the_end'

  # The values specified here override the all-worlds branch if you specified any and enabled the feature.
  # The file 'peasantry.yml' here contains the initial tree branch for the world 'world'.
  # Replace 'world' with the name of your own world and add additional worlds if you want to.
  # The Nether and The End are treated as different worlds by minecraft. Thus you can specify
  # different rank trees available to these worlds, compared to the overworld's rank tree.

#  world: 'peasantry.yml'
#  world_nether: 'aristocracy.yml'
#  world_the_end: 'mercantile.yml'
#  anotherworld: 'aristocracy.yml'
#  anotherworld_nether: 'aristocracy.yml'
#  anotherworld_the_end: 'aristocracy.yml'

# These worlds share a common rank. Going from one world to any one in the list will keep the rank the same.
# If you switch worlds between not linked worlds, then the player's rank will go to the default rank for the new world
# (or the last rank they had on that world of course)
# Remember that the nether and the end of each world is regarded as a separate world by minecraft, so if 
# you want them linked and sharing a common rank you need to link them together!
#
# If a world occurs in more than one of these lists, then the world containing lists are combined.
# So ["world", "world_nether"] and ["world_nether", "world_the_end"] will result in ["world", "world_nether", "world_the_end"]
#
# IMPORTANT: The linked worlds should have the same initial branch or you can lose rank data. This can not be checked!
linked-worlds:
  - ["world", "world_nether", "world_the_end"]
#  - ["anotherworld", "anotherworld_nether", "anotherworld_the_end"]



#--------------------------------------------#
# DON'T FORGET TO CONFIGURE THESE FILES TOO! #
#--------------------------------------------#

# If this is set to 'none', the player rank will not be indicated in the gui.
# If this value is not 'none', the player rank in the gui will be indicated by the item you specify here.
# The value has to be a valid org.bukkit.Material (https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html)
# (Exception: set this value to 'player_head' to use the player's head as the item)
player-rank-item: 'player_head'

# If this is set to true, when a player ranks up, their old rank is deleted from any database your permissions provider might have.
# Else the new rank just gets added to their ranks. If you wish to demote players it's strongly recommended to set this to true.
# This requires Vault to work.
remove-old-rank-on-rankup: true

# This section configures the inventory shown when players rank up.
rank-up-inventory:
  # This is the shape of the inventory gui.
  # The keys/numbers correspond to the rows of the inventory. Keep those in ascending order, starting at 1 and ending at 6!
  # Each row has a list of elements. Keep those at exactly 9 items per row or they will be cropped/filled
  # Each item specified here has to be present the 'items' map below.
  gui:
    '1': ['1', '1', '1', '2', '2', '2', '3', '3', '3']
    '2': ['1', 'a', '1', '2', 'p', '2', '3', 'c', '3']
    '3': ['1', '1', '1', '2', '2', '2', '3', '3', '3']
    #'4': []
    #'5': []
    #'6': []

  # The keys here are the strings you specified in the rows above. The values have to be valid items.
  # (see the 'player-rank-item' setting for details)
  #
  # The following item specifiers are reserved and special:
  # 'p' -> shows player information and data
  #
  # 'a' -> represents the clickable rankup accept item that shows all requirements and rank info (button)
  #        (if the rankup requirements i.e. money, xp, playtime and mcmmo levels are not sufficiently met,
  #         this item will represent the non-clickable item that shows which requirements are not met and by how much)
  #        (You need this in order for players to rank-up)
  #
  # 'r' -> represents the non-clickable item displaying the rank info
  #
  # 'c' -> represents the clickable cancel item (button) (can be left out, it just closes the inventory gui)
  #
  # You can invent any labels (in the gui/in this list) you want, just make sure to map them to your desired item here
  # Any label present in the gui and not found in this map will be replaced by a non-clickable empty slot in the gui
  #

  items:
    '1': 'lime_stained_glass_pane'
    '2': 'white_stained_glass_pane'
    '3': 'red_stained_glass_pane'
    'a': 'emerald_block'
    'z': 'emerald_ore'
    'p': 'player_head'
    'c': 'redstone_block'

# This section configures the inventory when a player can choose between 2 and 5 different branches to follow.
choose-branch-inventory:
  # You know the drill (or if you don't, follow the instructions for the 'rank-up-inventory' setting above)
  gui-2-branches:
    1: ['1', '1', '1', '1', '1', '1', '1', '1', '1']
    2: ['1', '2', 'b1', '2', '1', '2', 'b2', '2', '1']
    3: ['1', '1', '1', '1', '1', '1', '1', '1', '1']

  gui-3-branches:
    1: ['1', '1', '1', '1', '1', '1', '1', '1', '1']
    2: ['1', '2', 'b1', '2', 'b2', '2', 'b3', '2', '1']
    3: ['1', '1', '1', '1', '1', '1', '1', '1', '1']

  gui-4-branches:
    1: ['1', '1', '1', '1', '1', '1', '1', '1', '1']
    2: ['1', 'b1', '2', 'b2', '2', 'b3', '2', 'b4', '1']
    3: ['1', '1', '1', '1', '1', '1', '1', '1', '1']

  gui-5-branches:
    1: ['1', '1', '1', '1', '1', '1', '1', '1', '1']
    2: ['b1', '1', 'b2', '1', 'b3', '1', 'b4', '1', 'b5']
    3: ['1', '1', '1', '1', '1', '1', '1', '1', '1']

  #Same as above, except for the new reserved/special specifiers:
  # 'b1' -> represents the first possible branch's item if present
  # 'b2' -> represents the second possible branch's item if present
  # 'b3' -> represents the third possible branch's item if present
  # 'b4' -> represents the fourth possible branch's item if present
  # 'b5' -> represents the fifth possible branch's item if present
  #
  # (the branch's items are specified in the branches folder's yml files)
  #
  items:
    '1': 'white_stained_glass_pane'
    '2': 'gray_stained_glass_pane'
    # note that you do not need to specify items for b1 to b5 as you should configure those in each branch's own .yml
    # (and shouldn't really, though you can, I won't stop you and it won't do anything)


# This section configures the inventory shown when a player displays all ranks in a branch
ranks-inventory:
  # This item is a navigation button used to display the previous ranks in a branch (if more than 36 in branch)
  previous-branch-page-item: 'ghast_tear'
  # This item is a navigation button used to display the next ranks in a branch (if more than 36 in branch)
  next-branch-page-item: 'gold_nugget'
